{"version":3,"sources":["Views/Main.jsx","components/PetForm.jsx","Views/Create.jsx","Views/Show.jsx","Views/Edit.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Main","props","useState","pets","setPets","useEffect","Axios","get","then","res","data","results","catch","err","console","log","className","to","map","p","i","name","type","_id","PetForm","inputs","handleInputChange","handleSubmit","submitValue","errors","onSubmit","htmlFor","onChange","value","message","description","skill","skill2","Create","pet","setPet","setErrors","e","target","preventDefault","post","navigate","response","Show","count","setCount","id","onClick","delete","prevCount","Edit","put","title","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88cec8ff.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport {Link} from '@reach/router';\n\n\nconst Main = props => {\n    \n    const [pets,setPets] = useState (false);\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:8000/Pets\")\n            .then (res => setPets(res.data.results))\n            .catch(err => console.log(err))\n    },[])\n\n    \n    \n    return(\n        \n        \n        \n        pets ?\n        \n        <div className=\"d-flex flex-wrap justify-content-around col-12 mx-auto\">\n            <div className=\"d-flex flex-wrap justify-content-end col-12\">\n                <Link  to= \"/new\">Add a Pet to the Shelter</Link>\n            </div>\n            <div className=\"d-flex flex-wrap justify-content-start col-12\">\n                <h4>These Pets are looking for a good home</h4>\n            </div>\n            \n            <br/>\n            \n            <table className=\"table table-bordered col-10 mx\">\n                \n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        pets.map((p,i) => {\n                            return <tr key ={i}>\n                                        <td>{p.name}</td>\n                                        <td>{p.type}</td>\n                                        \n                                        <td>\n                                        <Link to= {`/show/${p._id}`} > Details </Link> |\n                                        <Link to= {`/edit/${p._id}`} > Edit </Link>\n                                        \n                                        </td>\n                                            \n\n                                        \n                            </tr>\n                        })\n                    }\n                </tbody>\n            </table> \n            </div>\n            :\n            <h2>Loading</h2>\n    )\n}\n\nexport default Main;\n","const PetForm = props => {\n    const {inputs, handleInputChange, handleSubmit, submitValue, errors} = props;\n\n    return(\n        <div className=\"d-flex flex-wrap justify-content-start col-12\">\n\n            <form onSubmit= {handleSubmit} \n        className=\"col-6 mx-auto\">\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Pet Name:</label>\n                <input \n                    type=\"text\"\n                    name=\"name\" className=\"form-control\"\n                    onChange= {handleInputChange}\n                    value= {inputs.name}\n                />\n                <span className=\"text-danger\">\n                    {errors.name ? errors.name.message: \"\"}\n                </span>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"type\">Pet Type:</label>\n                <input \n                    type=\"text\"\n                    name=\"type\" className=\"form-control\"\n                    onChange= {handleInputChange}\n                    value= {inputs.type}\n                />\n                <span className=\"text-danger\">\n                {errors.type ? errors.type.message: \"\"}\n                </span>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"description\">Pet Description:</label>\n                <input \n                    type=\"text\"\n                    name=\"description\" className=\"form-control\"\n                    onChange= {handleInputChange}\n                    value= {inputs.description}\n                />\n                <span className=\"text-danger\">\n                    {errors.description ? errors.description.message: \"\"}\n                </span>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"skill\">Skill 1:</label>\n                <input \n                    type=\"text\"\n                    name=\"skill\" className=\"form-control\"\n                    onChange= {handleInputChange}\n                    value= {inputs.skill}\n                />\n                <span className=\"text-danger\">\n                    {errors.skill ? errors.skill.message: \"\"}\n                </span>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"description\">Skill 2:</label>\n                <input \n                    type=\"text\"\n                    name=\"skill2\" className=\"form-control\"\n                    onChange= {handleInputChange}\n                    value= {inputs.skill2}\n                />\n                <span className=\"text-danger\">\n                    {errors.skill2 ? errors.skill2.message: \"\"}\n                </span>\n            </div>\n            <input type=\"submit\" value={submitValue} className=\"btn btn-primary\"/>\n        </form>\n        </div>\n        \n    )\n}\n\nexport default PetForm;","import {useState} from 'react';\nimport Axios from 'axios';\nimport PetForm from \"../components/PetForm\";\nimport { navigate, Link } from '@reach/router';\n\nconst Create = props => {\n    const [pet, setPet] = useState({\n        name:\"\",\n        type: \"\",\n        description: \"\",\n        skill: \"\",\n        skill2: \"\"\n    })\n\n    const [errors, setErrors] = useState({\n        name:\"\",\n        type: \"\",\n        description: \"\",\n        skill: \"\",\n        skill2: \"\"\n    })\n\n    const handleInputChange = e => {\n        \n        setPet({\n            ...pet,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        Axios.post('http://localhost:8000/Pets', pet)\n            .then(res=> navigate(\"/\"))\n            .catch(err=> {\n                    setErrors(err.response.data.errors);\n                    console.log(err);\n            })}\n            \n    \n    return (\n\n        <div>\n            \n            \n            <div className=\"d-flex flex-wrap justify-content-start col-12 mx-3\">\n                <h4>Know a pet needing a home?</h4>\n            </div>\n            \n            \n            <PetForm\n                inputs= {pet}\n                handleInputChange= {handleInputChange}\n                handleSubmit={handleSubmit}\n                errors= {errors}\n                submitValue=\"Submit\"\n            />\n        </div>\n    )\n}\n\nexport default Create;","import { useState,useEffect } from \"react\";\nimport Axios from 'axios';\nimport { navigate, Link} from '@reach/router';\n\nconst Show = props => {\n    const [pet, setPet] = useState (false);\n    const [count, setCount]= useState (0)\n\n    useEffect (() => {\n        Axios.get (`http://localhost:8000/Pets/${props.id}`)\n            .then (res => setPet(res.data.results))\n            .catch (err => console.log(err))\n    },[props])\n\n    const handleIncrement = () => {\n        setCount(prevCount => prevCount + 1);\n    }\n\n    \n\n    const handleDestroyPet = id => {\n        Axios.delete(`http://localhost:8000/Pets/${id}`)\n            .then( res => setPet(res.data.results))\n            .then(res=> navigate(\"/\"))\n            .catch (err => console.log(err))\n\n    }\n\n    return(\n        <>\n        \n            <div className=\"d-flex flex-wrap justify-content-between col-11 p-4\">\n                <h2 className=\"card-title\">Details About: {pet.name}</h2>\n                <button className= \"btn btn-danger btn-outline-dark \"onClick={()=> handleDestroyPet(pet._id)}>Adopt {pet.name}</button>\n            </div>\n            \n        <div className=\"card\">\n            \n            <div className=\"card-body text-center\">\n                \n                <h5 className=\"card-text text-left\">Pet Type: {pet.type}</h5>\n                <br/>\n                <h5 className=\"card-text text-left\">Description: {pet.description}</h5>\n                <br/>\n                <h5 className=\"card-text text-left\">Skills: <br/>{pet.skill} <br/> {pet.skill2} </h5>\n                \n            </div>\n        </div> \n        <button onClick= {handleIncrement}>Like {pet.name}</button> <h5>{count} Likes</h5>\n        </>\n    )\n}\n\nexport default Show;","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport PetForm from \"../components/PetForm\";\nimport { navigate } from '@reach/router';\n\nconst Edit = props => {\n    const [pet, setPet]= useState(false);\n\n    useEffect (()=> {\n        Axios.put(`http://localhost:8000/Pets/${props.id}`)\n            .then(res=> setPet (res.data.results))\n            .catch(err => console.log(err))\n                \n                \n    }, [props])\n\n    const [errors,setErrors] = useState({\n        name:\"\",\n        type: \"\",\n        description: \"\",\n        skill: \"\",\n        skill2: \"\"\n    })\n\n    const handleChange = e => {\n        setPet({\n            ...pet,\n            [e.target.name]: e.target.value\n\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        Axios.put(`http://localhost:8000/Pets/${props.id}`, pet)\n            .then(res => navigate('/'))\n            .catch(err => {\n                console.log(err.response.data.errors);\n                setErrors(err.response.data.errors);\n            } \n                \n                )}\n    return(\n        <>\n        <h2 className= \"d-flex flex-wrap justify-content-center col-12\">Edit {pet.name}</h2>\n        \n        {\n        \n            pet ?\n        <PetForm\n            inputs={pet}\n            title= \"Edit\"\n            submitValue=\"Edit Pet\"\n            handleInputChange= {handleChange}\n            handleSubmit= {handleSubmit}\n            errors= {errors}\n        /> : \n        <h2>Loading</h2>}\n        </>\n\n        \n        \n    )\n}\n\nexport default Edit;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Router, Link } from '@reach/router';\nimport Main from './Views/Main';\nimport Create from './Views/Create';\nimport Show from './Views/Show';\nimport Edit from './Views/Edit';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className= \"d-flex flex-wrap justify-content-between col-11 mx-3 p-2\">\n        <h1>Pet Shelter </h1>\n        <Link to= \"/\">Back to Home</Link>\n      </div>\n       \n      \n                \n\n      \n      <Router>\n      <Main path= \"/\" />\n      <Create path=\"/new\" />\n      <Show path= \"/show/:id\" />\n      <Edit path= \"/edit/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}